# vim: set et ts=2 sw=2:

version: '3.2'

services:
  web:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - php
    volumes:
      - ./:/soldout/source:ro
      - app-data:/soldout/data:ro
      - ./docker/web/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
        - default
        - web
    environment:
      TZ: Europe/Rome
    labels:
      - traefik.enable=true
      - traefik.http.routers.soldout.rule=Host(`soldout.mattiamari.me`)
      - traefik.http.routers.soldout.entrypoints=https
      - traefik.http.services.soldout.loadbalancer.server.port=80
      - traefik.http.routers.soldout.tls=true
      - traefik.http.routers.soldout.tls.certresolver=mattiamari
  php:
    build: ./docker/php
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - ./:/soldout/source:ro
      - app-data:/soldout/data
    networks:
      - default
    environment:
      TZ: Europe/Rome
  db:
    image: mariadb
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - 13306:3306
    environment:
      TZ: Europe/Rome
      MYSQL_ROOT_PASSWORD: WCPpFXAUcIjEfJ6LOEkmsA
      MYSQL_USER: soldout
      MYSQL_PASSWORD: IiseH73LQTyzTknBS03GYw
      MYSQL_DATABASE: soldout
  adminer:
    image: adminer
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - default
      - web
    labels:
      - traefik.enable=true
      - traefik.http.routers.soldoutdb.rule=(Host(`soldout.mattiamari.me`) && Path(`/db`))
      - traefik.http.routers.soldoutdb.entrypoints=https
      - traefik.http.services.soldoutdb.loadbalancer.server.port=8080
      - traefik.http.routers.soldoutdb.tls=true
      - traefik.http.routers.soldoutdb.tls.certresolver=mattiamari
  devtools:
    build:
      context: .
      dockerfile: ./docker/dev-tools.Dockerfile
    environment:
      TZ: Europe/Rome
    user: "1000:1000"
    volumes:
      - ./:/app

volumes:
  db-data:
  app-data:

networks:
    web:
        external: true
